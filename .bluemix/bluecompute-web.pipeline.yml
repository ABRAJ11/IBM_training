---
stages:
- name: BUILD US-South
  inputs:
  - service: ${REPO}
    type: git
    branch: ${BRANCH}
  triggers:
  - type: commit
  jobs:
  - name: Build BlueCompute Webapp
    type: builder
    working_dir: StoreWebApp
    artifact_dir: ''
    build_type: npm
    script: |-
      #!/bin/bash
      # The default Node.js version is 0.10.40
      # To use Node.js 0.12.7, uncomment the following line:
      export PATH=/opt/IBM/node-v0.12/bin:$PATH
      # To use Node.js 4.2.2, uncomment the following line:
      #export PATH=/opt/IBM/node-v4.2/bin:$PATH
      npm install newrelic --save
      cp node_modules/newrelic/newrelic.js ./
      npm install

- name: DEPLOY US-South
  inputs:
  - type: job
    stage: BUILD US-South
    job: Build BlueCompute Webapp
  triggers:
  - type: stage
  properties:
  - name: APP_DOMAIN
    value: ${DOMAIN_US}
    type: text
  - name: NEW_RELIC_LICENSE
    value: ${NEW_RELIC_LICENSE}
    type: text
  jobs:
  - name: Deploy BlueCompute Webapp
    type: deployer
    target:
      region_id: ${REGION_US}
      organization: ${ORG}
      space: ${SPACE}
      application: ${NAME_US}
    script: |
        #!/bin/bash
        set -x

        # download jq
        if [ ! -f ./jq ]; then
           wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
           mv jq-linux64 jq
           chmod u+x jq
        fi

        # create objectstorage service and key
        objstorage_svc="cloudnative-objstore"
        objstorage_container="bluecompute"
        cf create-service Object-Storage Free ${objstorage_svc}
        for i in {1..5}
        do
            status=$(cf service ${objstorage_svc}|grep -i 'status:'|awk '{print $NF}')
            case $status in
                 "progress") sleep 10;;
                 "succeeded") break;;
                 *) sleep 10;;
            esac
        done
        cf create-service-key ${objstorage_svc} admin1

        # set env for swift client
        cf service-key ${objstorage_svc} admin1 > admin1
        sed -i -e '/^\s*$/d' -e '/Getting /d' admin1
        cat admin1
        export OS_REGION_NAME=$(cat admin1 | ./jq '.region' | sed 's/"//g')
        export OS_PROJECT_ID=$(cat admin1 | ./jq '.projectId' | sed 's/"//g')
        export OS_USER_ID=$(cat admin1 | ./jq '.userId' | sed 's/"//g')
        export OS_PASSWORD=$(cat admin1 | ./jq '.password' | sed 's/"//g')
        export OS_AUTH_URL=$(cat admin1 | ./jq '.auth_url' | sed 's/"//g')/v3
        export OS_AUTH_VERSION=3
        export OS_IDENTITY_API_VERSION=3

        # install swift client
        sudo apt-get update
        sudo apt-get upgrade -y
        sudo apt-get install -y python-dev
        sudo pip install --upgrade python-swiftclient
        sudo pip install --upgrade python-keystoneclient

        # upload public/images/items/ to swift container
        swift post ${objstorage_container}
        swift upload --changed --skip-identical ${objstorage_container} public/images/items/
        swift list ${objstorage_container}

        # create auto-scaling service
        cf create-service Auto-Scaling free cloudnative-autoscale

        # create app
        cf push "${CF_APP}" -n "${CF_APP}" -d "${APP_DOMAIN}" --no-start
        cf bind-service "${CF_APP}" "${objstorage_svc}"
        cf set-env "${CF_APP}" NEW_RELIC_LICENSE_KEY "${NEW_RELIC_LICENSE}"
        cf set-env "${CF_APP}" NEW_RELIC_APP_NAME "${CF_APP}"
        cf start "${CF_APP}"

- name: VALIDATE US-South
  inputs:
  - type: job
    stage: BUILD US-South
    job: Build BlueCompute Webapp
  triggers:
  - type: stage
  properties:
  - name: test_env
    value: cloud
    type: text
  - name: appname
    value: ${NAME_US}
    type: text
  - name: domainname
    value: ${DOMAIN_US}
    type: text
  jobs:
  - name: Contract Validation
    type: tester
    script: |-
      #!/bin/bash
      # invoke tests here
      mkdir tests
      touch tests/TEST-MochaResults.xml
      npm install
      ls node_modules/mocha/bin
      echo "Start running the test"
      node_modules/mocha/bin/mocha -R xunit test/storeapp-test.js > tests/TEST-MochaResults.xml
    enable_tests: true
    test_file_pattern: tests/TEST-*.xml

- name: BUILD London
  inputs:
  - service: ${REPO}
    type: git
    branch: ${BRANCH}
  triggers:
  - type: commit
  jobs:
  - name: Build BlueCompute Webapp
    type: builder
    working_dir: StoreWebApp
    artifact_dir: ''
    build_type: npm
    script: |-
      #!/bin/bash
      # The default Node.js version is 0.10.40
      # To use Node.js 0.12.7, uncomment the following line:
      export PATH=/opt/IBM/node-v0.12/bin:$PATH
      # To use Node.js 4.2.2, uncomment the following line:
      #export PATH=/opt/IBM/node-v4.2/bin:$PATH
      npm install newrelic --save
      cp node_modules/newrelic/newrelic.js ./
      npm install

- name: DEPLOY London
  inputs:
  - type: job
    stage: BUILD London
    job: Build BlueCompute Webapp
  triggers:
  - type: stage
  properties:
  - name: APP_DOMAIN
    value: ${DOMAIN_EU}
    type: text
  - name: NEW_RELIC_LICENSE
    value: ${NEW_RELIC_LICENSE}
    type: text
  jobs:
  - name: Deploy BlueCompute Webapp
    type: deployer
    target:
      region_id: ${REGION_EU}
      organization: ${ORG}
      space: ${SPACE}
      application: ${NAME_EU}
    script: |
        #!/bin/bash
        set -x

        # download jq
        if [ ! -f ./jq ]; then
           wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
           mv jq-linux64 jq
           chmod u+x jq
        fi

        # create objectstorage service and key
        objstorage_svc="cloudnative-objstore"
        objstorage_container="bluecompute"
        cf create-service Object-Storage Free ${objstorage_svc}
        for i in {1..5}
        do
            status=$(cf service ${objstorage_svc}|grep -i 'status:'|awk '{print $NF}')
            case $status in
                 "progress") sleep 10;;
                 "succeeded") break;;
                 *) sleep 10;;
            esac
        done
        cf create-service-key ${objstorage_svc} admin1

        # set env for swift client
        cf service-key ${objstorage_svc} admin1 > admin1
        sed -i -e '/^\s*$/d' -e '/Getting /d' admin1
        cat admin1
        export OS_REGION_NAME=$(cat admin1 | ./jq '.region' | sed 's/"//g')
        export OS_PROJECT_ID=$(cat admin1 | ./jq '.projectId' | sed 's/"//g')
        export OS_USER_ID=$(cat admin1 | ./jq '.userId' | sed 's/"//g')
        export OS_PASSWORD=$(cat admin1 | ./jq '.password' | sed 's/"//g')
        export OS_AUTH_URL=$(cat admin1 | ./jq '.auth_url' | sed 's/"//g')/v3
        export OS_AUTH_VERSION=3
        export OS_IDENTITY_API_VERSION=3

        # install swift client
        sudo apt-get update
        sudo apt-get upgrade -y
        sudo apt-get install -y python-dev
        sudo pip install --upgrade python-swiftclient
        sudo pip install --upgrade python-keystoneclient

        # upload public/images/items/ to swift container
        swift post ${objstorage_container}
        swift upload --changed --skip-identical ${objstorage_container} public/images/items/
        swift list ${objstorage_container}

        # create auto-scaling service
        cf create-service Auto-Scaling free cloudnative-autoscale

        # create app
        cf push "${CF_APP}" -n "${CF_APP}" -d "${APP_DOMAIN}" --no-start
        cf bind-service "${CF_APP}" "${objstorage_svc}"
        cf set-env "${CF_APP}" NEW_RELIC_LICENSE_KEY "${NEW_RELIC_LICENSE}"
        cf set-env "${CF_APP}" NEW_RELIC_APP_NAME "${CF_APP}"
        cf start "${CF_APP}"

- name: VALIDATE London
  inputs:
  - type: job
    stage: BUILD London
    job: Build BlueCompute Webapp
    dir_name: null
  triggers:
  - type: stage
  properties:
  - name: test_env
    value: cloud
    type: text
  - name: appname
    value: ${NAME_EU}
    type: text
  - name: domainname
    value: ${DOMAIN_EU}
    type: text
  jobs:
  - name: Contract Validation
    type: tester
    script: |-
      #!/bin/bash
      # invoke tests here
      mkdir tests
      touch tests/TEST-MochaResults.xml
      npm install
      ls node_modules/mocha/bin
      echo "Start running the test"
      node_modules/mocha/bin/mocha -R xunit test/storeapp-test.js > tests/TEST-MochaResults.xml
    enable_tests: true
    test_file_pattern: tests/TEST-*.xml
